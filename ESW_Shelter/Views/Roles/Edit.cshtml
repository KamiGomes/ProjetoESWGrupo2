@model ESW_Shelter.Models.Roles

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_BackLayout.cshtml";
    List<RoleAuthorization> autho = ViewBag.Authorizations;
}

<h2>Edit</h2>

<h4>Roles</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="RoleID" />
            <div class="form-group">
                <label asp-for="RoleName" class="control-label"></label>
                <input asp-for="RoleName" class="form-control" />
                <span asp-validation-for="RoleName" class="text-danger"></span>
            </div>
            <label asp-for="ComponentFK" class="control-label"></label>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.RoleName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Create)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Read)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Update)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Delete)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Components item in ViewBag.Components)
                    {
                        <tr>
                            <td>
                                @item.Name
                            </td>
                            <td>
                                <input name="@item.Name" id=1 type="checkbox" class="check" value="1" checked="@(autho.Exists(e=> e.ComponentFK == item.ComponentID) ? autho.Where(e=> e.ComponentFK == item.ComponentID).First().Create.Equals(true) ? "checked" : null : null)" />
                            </td>
                            <td>
                                <input name="@item.Name" id="2" type="checkbox" class="check" value="2" checked="@(autho.Exists(e=> e.ComponentFK == item.ComponentID) ? autho.Where(e=> e.ComponentFK == item.ComponentID).First().Read.Equals(true) ? "checked" : null : null)" />
                            </td>
                            <td>
                                <input name="@item.Name" id="3" type="checkbox" class="check" value="3" checked="@(autho.Exists(e=> e.ComponentFK == item.ComponentID) ? autho.Where(e=> e.ComponentFK == item.ComponentID).First().Update.Equals(true) ? "checked" : null : null)" />
                            </td>
                            <td>
                                <input name="@item.Name" id="4" type="checkbox" class="check" value="4" checked="@(autho.Exists(e=> e.ComponentFK == item.ComponentID) ? autho.Where(e=> e.ComponentFK == item.ComponentID).First().Delete.Equals(true) ? "checked" : null : null)" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
